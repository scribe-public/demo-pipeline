name: Evaluate OWASP-TOP10-CICD-SC

on:
  push:
    branches:
      - owasp-top10-cicd
  workflow_dispatch:
  workflow_run:
    workflows: ["Build to GCR"]
    types:
      - completed

env:
  PRODUCT_NAME: "nautical-analytics"
#  PRODUCT_VERSION: ${{ github.run_number }}  --- is set later

jobs:
  github-evidence:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Sigstore Signing
    outputs:
      product_version: ${{ steps.get_version.outputs.PRODUCT_VERSION }}

    env:
      GITHUB_EXTERNAL_TOKEN: ${{ secrets.DEMO_GH_SECRET }}
      SCRIBE_TOKEN: ${{ secrets.SCRIBE_TOKEN }}
      VALINT_VERIFY_BEAUTIFY: true
      DOCKER_DRIVER: overlay2
      DOCKER_CONFIG: ${{ github.workspace }}/.docker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Product Version
        id: get_version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Replace with your actual workflow file name
          WORKFLOW_FILE="build2gcr.yml"

          # Get workflow ID
          WORKFLOW_ID=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows | \
            jq -r ".workflows[] | select(.path == \".github/workflows/${WORKFLOW_FILE}\") | .id")

          echo "Workflow ID is: $WORKFLOW_ID"

          # Get the latest successful run number
          RUN_NUMBER=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/$WORKFLOW_ID/runs?status=success&per_page=1" | \
            jq -r '.workflow_runs[0].run_number')

          echo "Latest successful run number is: $RUN_NUMBER"

          echo "PRODUCT_VERSION=$RUN_NUMBER" >> $GITHUB_ENV
          echo "PRODUCT_VERSION=$RUN_NUMBER" >> $GITHUB_OUTPUT

      - name: Get Repository Base Name
        run: |
          # Extract the base name of the repository
          REPO_BASE_NAME=$(basename ${{ github.repository }})
          echo "REPO_BASE_NAME=$REPO_BASE_NAME" >> $GITHUB_ENV

      - name: Sign in to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DEMO_GH_SECRET }}

      - name: Discover Github and Image SLSA Provanence Creation
        uses: scribe-security/action-platforms@dev
        with:
          command: discover
          platform: github
          valint_args: >-
            --valint.log-level info
          sign: true
          attest-default: sigstore
          args: >-
            --token ${{ env.GITHUB_EXTERNAL_TOKEN}}
            --organization.mapping *${{ github.repository_owner}}::${{env.PRODUCT_NAME}}::${{ env.PRODUCT_VERSION }}
            --repository.mapping *${{ env.REPO_BASE_NAME}}::${{ env.PRODUCT_NAME }}::${{ env.PRODUCT_VERSION }}
            --scope.workflow.past_days 2
            --scope.branch ${{ github.ref_name }}
            --hook trivy_iac_and_secrets_sarif
            -f

#  --scope.workflow.analyzed_logs
# -- slsa-enable
# --scope.workflow.name *Build*

      - name: Evaluate OWASP TOP 10 CI/CD
        uses: scribe-security/action-verify@master
        with:
          initiative: policies/owasp-top10-cicd-gh.yaml
          bundle-branch: owasp-top10-cicd-sc
          format: attest
          product-key: ${{ env.PRODUCT_NAME }}
          product-version: ${{ env.PRODUCT_VERSION }}
          all-evidence: true
          beautify: true
          md: valint.md
        env:
          SCRIBE_TOKEN: ${{ secrets.SCRIBE_TOKEN }}
          SCRIBE_URL: ${{ env.SCRIBE_URL }}
          DEBUG: true

      # ── always publish artifacts ───────────────────────────────────
      - name: Upload evidence bundle
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: owasp-top10-cicd-sc-report
          path: valint.md
          retention-days: 7
